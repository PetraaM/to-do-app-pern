{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pferc\\\\OneDrive\\\\Skrivbord\\\\git\\\\to-do-app-pern\\\\client\\\\src\\\\components\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  mode,\n  setShowModal,\n  getData,\n  task\n}) => {\n  _s();\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  const editMode = mode === \"edit\" ? true : false;\n  const [data, setData] = useState({\n    user_id: editMode ? task.user_id : cookies.User.id,\n    title: editMode ? task.title : \"\",\n    progress: editMode ? task.progress : 50,\n    data: editMode ? task.date : new Date()\n  });\n  const postData = async e => {\n    var _data$title;\n    e.preventDefault();\n    if (data.title === null || ((_data$title = data.title) === null || _data$title === void 0 ? void 0 : _data$title.trim().length) === 0) {\n      return toast.error(\"Task is required\");\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}todos`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.status === 201) {\n        setShowModal(false);\n        getData();\n        toast.success(\"Todo saved\");\n      } else toast.error(\"Failed to update todo\");\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n    }\n  };\n  const editData = async e => {\n    var _data$title2;\n    e.preventDefault();\n    if (data.title === null || ((_data$title2 = data.title) === null || _data$title2 === void 0 ? void 0 : _data$title2.trim().length) === 0) {\n      return toast.error(\"Task is required\");\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}todos/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.status === 200) {\n        setShowModal(false);\n        getData();\n        toast.success(\"Todo updated\");\n      } else toast.error(\"Failed to update todo\");\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(data => ({\n      ...data,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Lets's \", mode, \" you task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          maxLength: 30,\n          placeholder: \"Write your task here\",\n          name: \"title\",\n          value: data.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"range\",\n          children: \"Drag to select your current progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"range\",\n          id: \"range\",\n          min: \"0\",\n          max: \"100\",\n          name: \"progress\",\n          value: data.progress,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: mode,\n          type: \"submit\",\n          value: \"save\",\n          onClick: editMode ? editData : postData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"EKuOfhdXy6Gdc0DGTRpLtMGHk28=\", false, function () {\n  return [useCookies];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useCookies","toast","jsxDEV","_jsxDEV","Modal","mode","setShowModal","getData","task","_s","cookies","setCookie","removeCookie","editMode","data","setData","user_id","User","id","title","progress","date","Date","postData","e","_data$title","preventDefault","trim","length","error","response","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","status","success","editData","_data$title2","handleChange","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","required","maxLength","placeholder","onChange","htmlFor","type","min","max","_c","$RefreshReg$"],"sources":["C:/Users/pferc/OneDrive/Skrivbord/git/to-do-app-pern/client/src/components/Modal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Modal = ({ mode, setShowModal, getData, task }) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(null);\r\n  const editMode = mode === \"edit\" ? true : false;\r\n  const [data, setData] = useState({\r\n    user_id: editMode ? task.user_id : cookies.User.id,\r\n    title: editMode ? task.title : \"\",\r\n    progress: editMode ? task.progress : 50,\r\n    data: editMode ? task.date : new Date(),\r\n  });\r\n\r\n  const postData = async (e) => {\r\n    e.preventDefault();\r\n    if (data.title === null || data.title?.trim().length === 0) {\r\n      return toast.error(\"Task is required\");\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL}todos`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n      if (response.status === 201) {\r\n        setShowModal(false);\r\n        getData();\r\n        toast.success(\"Todo saved\");\r\n      } else toast.error(\"Failed to update todo\");\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const editData = async (e) => {\r\n    e.preventDefault();\r\n    if (data.title === null || data.title?.trim().length === 0) {\r\n      return toast.error(\"Task is required\");\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL}todos/${task.id}`,\r\n        {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        setShowModal(false);\r\n        getData();\r\n        toast.success(\"Todo updated\");\r\n      } else toast.error(\"Failed to update todo\");\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((data) => ({ ...data, [name]: value }));\r\n  };\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"modal\">\r\n        <div className=\"form-title-container\">\r\n          <h3>Lets's {mode} you task</h3>\r\n          <button onClick={() => setShowModal(false)}>X</button>\r\n        </div>\r\n\r\n        <form method=\"POST\">\r\n          <input\r\n            required\r\n            maxLength={30}\r\n            placeholder=\"Write your task here\"\r\n            name=\"title\"\r\n            value={data.title}\r\n            onChange={handleChange}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"range\">Drag to select your current progress</label>\r\n          <input\r\n            required\r\n            type=\"range\"\r\n            id=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            name=\"progress\"\r\n            value={data.progress}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            className={mode}\r\n            type=\"submit\"\r\n            value=\"save\"\r\n            onClick={editMode ? editData : postData}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}